name: nextjs deploy

env: 
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME}}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN}}

  SSH_PRIVATE_KEY: ${{ vars.SSH_PRIVATE_KEY }}
  SSH_USER: ${{ vars.SSH_USER}}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.6

            - name: login to the docker hub with token
              run: |
                echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

            - name: build the docker image
              run: docker build -t $IMAGE_NAME:latest .
              
            - name: push the docker image
              run: docker push $IMAGE_NAME:latest

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.6

            - name: create SSH key 
              run: |
                echo "$SSH_PRIVATE_KEY" > private.key
                sudo chmod 600 private.key
                

            - name: set up ansible
              run: |
                sudo apt-get update -y
                sudo apt-get install software-properties-common
                sudo add-apt-repository --yes --update ppa:ansible/ansible
                sudo apt install ansible -y
                sudo apt-get install python3 python3-pip -y
                sudo apt-get install python3-boto3
                sudo apt-get install python3-boto
                sudo apt-get install python3-botocore
                ansible-galaxy collection install -f amazon.aws

            - name: Run dynamic inventory playbooks
              run: |
                ansible-playbook \
                --extra-vars "aws_access_key=$AWS_ACCESS_KEY" \
                --extra-vars "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" \
                --extra-vars "ssh_user=$SSH_USER" \
                --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" \
                --extra-vars "ansible_python_interpreter=/usr/bin/python3" \
                -vvv \
                devops/dynamicip.yml
  
            - name: create SSH key 
              run: |
                echo "$SSH_PRIVATE_KEY" > private.key
                sudo chmod 400 private.key
                mkdir -p ~/.ssh
                touch ~/.ssh/known_hosts
                chmod 644 ~/.ssh/known_hosts

            
            - name: set up ansible
              run: |
                sudo apt-get update -y
                sudo apt-get install software-properties-common
                sudo add-apt-repository --yes --update ppa:ansible/ansible
                sudo apt install ansible -y
                sudo apt-get install python3 python3-pip -y
                sudo apt-get install python3-boto3
                sudo apt-get install python3-boto
                sudo apt-get install python3-botocore
                ansible-galaxy collection install -f amazon.aws

            - name: add ssh key to inventory file
              run: |
                echo "ansible_ssh_private_key_file=private.key" >> inventory

            - name: Debug file structure
              run: ls -R
 
            - name: Deploy with ansible
              run: |    
                ansible-playbook -i inventory \ 
                --extra-vars "image_name=$IMAGE_NAME:latest" \
                --extra-vars "domain_name=$DOMAIN_NAME" \
                --extra-vars "container_name=$CONTAINER_NAME" \
                --extra-vars "dockerhub_username=$DOCKERHUB_USERNAME" \
                --extra-vars "dockerhub_token=$DOCKERHUB_TOKEN" \
                --extra-vars "ssh_user=$SSH_USER" \
                --extra-vars "ansible_ssh_common_args='-o StrictHostKeyChecking=no'" \
                --extra-vars "ansible_python_interpreter=/usr/bin/python3" \
                devops/playbook.yml