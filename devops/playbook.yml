---
 
- name: "fetching instance details"
  become: false
  hosts: localhost
  vars:
    region: "ap-southeast-1"
    asg_name: "ably" 
    IMAGE_NAME: "{{ image_name}}"
    DOCKERHUB_USERNAME: "{{ dockerhub_username }}"
    DOCKERHUB_TOKEN: "{{ dockerhub_token }}"
    DOMAIN_NAME: "{{ domain_name }}"
    SSH_USER: "{{ ssh_user }}"
    CONTAINER_NAME: "{{ container_name }}" 
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_access_key }}" 
    AWS_ACCESS_KEY: "{{ aws_access_key }}"       #name of autoscaling group
  tasks:
    - name: Debug Python interpreter
      debug:
        msg: "{{ ansible_playbook_python }}"

    - name: "gathering instance details"
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        filters:
          "tag:aws:autoscaling:groupName": "{{ asg_name }}"
          instance-state-name: [ "running" ]
      register: instance_details

    - name: "creating dynamic inventory"
      add_host:
        groups: "asg_instances"
        hostname: "{{ item.public_ip_address }}"
        ansible_user: "{{ SSH_USER }}"
        ansible_ssh_host: '{{ item.public_ip_address }}'
        ansible_ssh_port: "22"
        ansible_ssh_private_key_file: "./private.key"
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      loop: "{{ instance_details.instances }}"

    
- name: "Deploy application on ASG instances"
  become: true
  hosts: all 
  serial: 1
  tasks:
    - name: update the server
      apt: 
        update_cache: yes
    
    - name: ensure dependencies are met
      shell: |
        sudo dpkg --audit
        sudo apt-get update --fix-missing
        sudo apt-get install -f
    
    - name: pull the image
      docker_image:
        name: "{{ IMAGE_NAME }}"
        source: pull

    - name: run the docker container
      docker_container:
        name: "{{ CONTAINER_NAME }}"
        image: "{{ IMAGE_NAME }}"
        state: started
        restart_policy: always
        ports:
          - "3000:3000"

    - name: wait for the container to start
      wait_for:
        host: localhost
        port: 3000
        delay: 5
        timeout: 60
  